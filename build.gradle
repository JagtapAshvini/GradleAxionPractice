import org.apache.tools.ant.filters.*
import com.github.zafarkhaja.semver.Version
import java.util.regex.Matcher
import static String.format

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.3/userguide/java_library_plugin.html
 */




plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'pl.allegro.tech.build.axion-release' version '1.5.0'
}

project.version=scmVersion.version

scmVersion{
    tag {
      prefix ='ver'
      initialVersion = { config, position -> '0.1.0' }
    }
    
    branchVersionIncrementer = [
      'master.*' : "incrementMinor",
      'release.*' : { context -> 
             if(context.currentVersion.preReleaseVersion){
             Matcher matcher = context.currentVersion.preReleaseVersion =~ /^(.*?)(\d+)$/
             if(matcher.matches()){
                long nextNumber = Long.parseLong(matcher.group(2)) + 1
                String nextNumberPadded = format("%0" + matcher.group(2).length() + "d",nextNumber);
                String nextPreReleaseVersion = matcher.group(1) + nextNumberPadded
                
                return new Version.Builder()
                .setNormalVersion(context.currentVersion.normalVersion)
                .setPreReleaseVersion(nextPreReleaseVersion)
                .build();
             }
             }
             return context.currentVersion.incrementMinorVersion()
      },
    ]
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
